import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

def isGoogle() {
    return project.hasProperty("uploadTask") && project.property("uploadTask") == 'google'
}

// jcenter 上传配置
publish {
    artifactId = isGoogle() ? 'jsbridge-google' : 'jsbridge'
    userOrg = 'walid1992'
    groupId = 'com.walid'
    publishVersion = VERSION
    desc = "android js bridge lib ~"
    website = 'https://github.com/walid1992/AndroidJSBridge'
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName VERSION
    }
    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "String", "artifactId", "\"${publish.artifactId}\""
        }

        release {
            minifyEnabled false
            buildConfigField "String", "artifactId", "\"${publish.artifactId}\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
    println tskReqStr
    Pattern pattern;
    if (tskReqStr.contains("assemble"))
        pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    else
        pattern = Pattern.compile("generate(\\w+)(Release|Debug)")

    Matcher matcher = pattern.matcher(tskReqStr)
    if (matcher.find())
        return matcher.group(1).toLowerCase()
    else {
        println "NO MATCH FOUND"
        return "";
    }
}

// 动态添加依赖
afterEvaluate {
    println getCurrentFlavor()
    if (isGoogle()) {
        println 'google'
        this.dependencies.add("api", 'cn.soulapp.android:tbssdk:43939')
    } else {
        println 'china'
        this.dependencies.add("api", 'com.tencent.tbs.tbssdk:sdk:43939')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    api 'com.google.code.gson:gson:2.8.5'
}
